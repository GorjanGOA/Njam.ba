# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET    /                                        controllers.Application.index()
GET    /registration                            controllers.Application.toRegistration()
POST   /                                        controllers.Application.registration()
POST   /registrationRestaurant                  controllers.Application.registrationRestaurant()
GET    /registrationRestaurant                  controllers.Application.toRegistrationRestaurant()
POST   /refund/:id                              controllers.Application.askForRefund(id: Int)

POST   /contact                                 controllers.ContactController.sendMail()
GET    /contact                                 controllers.ContactController.contacts()

GET    /admin/:email                            controllers.SudoController.administrator(email: String)
POST   /admin/delete/:id                        controllers.SudoController.deleteRestaurant(id: Int)
POST   /admin/approve/:id                       controllers.SudoController.approveRestaurant(id:  Int)
GET    /getStats                                controllers.SudoController.getStatistic()
POST   /createCategory                          controllers.SudoController.createCategory()
POST   /editCategory                            controllers.SudoController.editCategory()

GET    /fileUpload/:id                          controllers.Application.showFileUpload(id: Int)
POST   /fileUpload/Meal/:id                     controllers.FileUpload.saveMealIMG(id: Int)
POST   /fileUpload/Restaurant/                  controllers.FileUpload.saveRestaurantIMG()
GET    /fileUpload/deleteimg/:image/:meal       controllers.FileUpload.deleteImg(image: String,meal: Int)

GET    /restaurantOwner/:email                  controllers.RestaurantController.restaurant(email: String)
GET    /restaurantOwnerEditProfile/:email       controllers.RestaurantController.editRestaurantURL(email: String)
POST   /restaurantOwnerEditProfile/:email       controllers.RestaurantController.editRestaurant(email: String)
POST   /restaurantOwner/                        controllers.RestaurantController.createMeal()
POST   /restaurantOwner/delete/:id              controllers.RestaurantController.deleteMeal(id: Int)


GET    /restaurantOwner/editmeal/:id            controllers.RestaurantController.editMealURL(id: Int)
POST   /restaurantOwner/editmeal/:id            controllers.RestaurantController.editMeal(id: Int)

GET    /restaurantProfile/:name                 controllers.Application.toRestaurant(name: String)
GET    /login                                   controllers.Application.toLogin()
POST   /login                                   controllers.Application.login()
GET    /user/:email                             controllers.Application.toUser(email: String)
POST   /user/:email                             controllers.Application.editUser(email: String)
POST   /user/phone/:email                         	controllers.Application.addPhone(email: String)
GET    /logout                                  controllers.Application.logout()
GET    /confirm/:confirmationString             controllers.Validate.validateEmail(confirmationString: String)
GET    /repeatVerification                      controllers.Application.toRepeatVerification()
POST   /verification                            controllers.Application.repeatVerification()


GET    /faqPage                                 controllers.Application.showFaq()
POST   /admin/faq                               controllers.FaqController.create()
POST   /admin/faq/delete/:id                    controllers.FaqController.delete(id: Int)
POST   /admin/newsletter                        controllers.NewsletterController.sendNewsletter()        
GET    /confirmNewsletter/:confirmationString   controllers.Validate.validateNewslettter(confirmationString : String)
GET    /unsubscribe/:confirmationString         controllers.Validate.unsubscribe(confirmationString : String) 
POST   /admin/refund                            controllers.PaypalController.refundProcessing(cartId : Int)


GET    /search                                  controllers.SearchController.searchByGeneric(q: String)
GET    /search/city/:city                       controllers.SearchController.searchByCity(city: String)
GET    /search/toAdvancedSearch                 controllers.SearchController.redirect()
POST   /search/advancedSearch                   controllers.SearchController.advancedSearch()
GET    /search/category/:category               controllers.SearchController.searchByCategory(category: String)


GET    /faqEdit/:id                             controllers.FaqController.showEditFaq(id: Int)
POST   /faqEdit/:id                             controllers.FaqController.editFaq(id: Int)

GET    /cart                                    controllers.CartController.showCart()

GET    /cart/delete/all                         controllers.CartController.removeAllFromCart(id: Int, cartId: Int)

GET    /cart/delete                             controllers.CartController.removeFromCart(id: Int, cartid: Int)
POST   /cart/bind                               controllers.CartController.bindQuantity(id: Int, cartId: Int)
POST   /cart/note                               controllers.CartController.addNoteToCart(cartId : Int)
POST   /cart/location                           controllers.CartController.setLocation(userId : Int)

GET    /mealView/:id                            controllers.CartController.viewMeal(id: Int)
POST   /mealView/:id                            controllers.CartController.addMealToBasket(id: Int)
POST   /mealView/comment/:id                    controllers.CommentController.newComment(id: Int)


POST   /restaurantOwner/delete/                 controllers.PaypalController.deleteOrder(id: Int)
GET    /creditStatus                            controllers.PaypalController.showPurchase()
POST   /creditpurchase                          controllers.PaypalController.purchaseProcessing(cartId: Int)
GET    /creditsuccess/:cartId                   controllers.PaypalController.creditSuccess(cartId: Int)
POST   /restaurantOwner/:id                     controllers.PaypalController.executePaymentById(id: Int)
GET    /creditfail                              controllers.PaypalController.creditFail()


POST   /userSearch                              controllers.SearchController.ajaxList()
GET    /userSearch                              controllers.SearchController.ajaxSearch() 
 
POST   /getOrderDetails/:id                     controllers.CartController.giveMeDetails(id: String)
POST   /subscribed                              controllers.NewsletterController.subscribe()
GET    /about                                   controllers.Application.about()
POST   /message                                 controllers.SmsController.messages(deliveryTime: Long, name: String)
POST   /pin                             controllers.SmsController.confirmNumber(pin: String)
POST   /check                        controllers.PinController.checkPin(email: String)
POST   /sendFbJson                          controllers.FacebookController.sendFbJson()

 
# API service 
GET    /api/users                               controllers.api.UserApi.users()
POST   /api/user                                controllers.api.UserApi.oneUser()
GET    /api/meals                               controllers.api.MealApi.meals()
GET    /api/mealsImg                            controllers.api.MealApi.mealsWithImages()
POST   /api/meal                                controllers.api.MealApi.oneMeal()
POST   /api/mealsRestaurant                     controllers.api.MealApi.mealsOfRestaurant()
GET    /api/restaurants                         controllers.api.RestaurantApi.restaurants()
POST   /api/restaurant                          controllers.api.RestaurantApi.oneRestaurant()
POST   /api/login                               controllers.api.loginService.loginToJson()
POST   /api/cart                                controllers.api.CartApi.mealToCart()

# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file                            controllers.Assets.at(path="/public", file)

GET    /webjars/*file                           controllers.WebJarAssets.at(file)
